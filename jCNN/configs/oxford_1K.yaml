
OUT_PATH : 'outputs/' # Folder for all outputs. '/' is needed.
EXPERIMENT_NAME : 'trial/' # Name of the experiment. '/' is needed.
LOG_BOOK : 'log.txt' # Name of the file to store logs.
DATA_PATH : 'data/' # Path to data folder. It should have 3 folders - 'train' , 'val', 'test' - with following data : 'train_data_<i>.npy','train_labels_<i>.npy', 'train_mask_<i>.npy','test_data.npy','test_labels.npy','test_masks.npy', 'val_data.npy','val_labels.npy','val_masks.npy'. 
NUM_SUB_DATASETS : 1
MODEL_SPECS : [128,128,64,64,32,32,16,16] #number of filters in each layer
USE_FNN : False
AUGMENT : TRUE
ALPHA : 1
HM_COUNT : 1000
selected_masks : []
SEED : 123 # For image data augmentation
PATIENCE : 500 # for early stopping
BATCH_SIZE : 64 # batch size
CLH : 0 # 
RGB : 1 # if input is 3 channel image
RUNS : 1 # number of runs
FNN : False # if the network is having fully-connected layers (True) or is all_convolutional (False)
EPOCHS : 200 #200 # Number of epochs
CHANNELS : 3 # Number of channels in input image
NUM_CLASSES : 2 # Total number of classes
NUM_DATASETS : 7 # Number of sub-datasets
INPUT_SIZE : 96 # Input image dimension ie. height and width
CLASS_WEIGHT : [2,1]
LEARNING_RATE : 1e-4
DECAY : 1e-6
DESCRIPTION : "jCNN_End_to_End"
TRAINABLE_WTS : True
PADDING : "same"
DATA_LOADING : "incremental" 
SUFFIX : _OXFD
MODEL_NAME : "JCNN"
CLASS_NAMES : ['cat','dog']